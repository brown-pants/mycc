# 程序： 定义列表
<program> -> <declaration_list>

# 定义列表： 若干个 定义
<declaration_list> -> <declaration> <declaration_list>
<declaration_list> -> ~

# 定义： 类型 判断指针 标识符 定义尾
<declaration> -> type <is_pointer> id <dec_tail>

# 判断指针：* 或 空
<is_pointer> -> *
<is_pointer> -> ~

# 定义尾：;                      表示定义普通变量
<dec_tail> -> ;

# 定义尾： = 表达式               表示定义普通变量并赋值
<dec_tail> -> = <expression> ;

# 定义尾： [常数]                 表示定义数组
<dec_tail> -> [ num ] ;

# 定义尾： (参数列表) 复合语句      表示定义函数
<dec_tail> -> ( <params> ) <compound_stmt>

# 参数列表： 参数 参数尾
<params> -> <param> <params_tail>
<params> -> ~

# 参数： 数据类型 判断指针 标识符
<param> -> type <is_pointer> id

# 参数尾： 若干个 , 参数
<params_tail> -> , <param> <params_tail>
<params_tail> -> ~

#         ...;        {...}   if...else...  while for   return ...;
# 语句： 表达式语句 或 复合语句 或 选择语句 或 迭代语句 或 返回语句
<statement> -> <expression_stmt>
<statement> -> <compound_stmt>
<statement> -> <selection_stmt>
<statement> -> <iteration_stmt>
<statement> -> <return_stmt>

# 表达式语句： 表达式 ; 或 ;
<expression_stmt> -> <expression> ;
<expression_stmt> -> ;

# 复合语句： { 复合列表 }
<compound_stmt> -> { <compound_list> }

# 复合列表: 若干 单复合语句
<compound_list> -> <compound> <compound_list>
<compound_list> -> ~

# 单复合语句： 变量定义 或 语句
<compound> -> <var_dec>
<compound> -> <statement>

# 变量定义： 数据类型 判断指针 标识符 变量定义尾
<var_dec> -> type <is_pointer> id <var_dec_tail> ;

#变量定义尾：[常数] 或 判断赋值
<var_dec_tail> -> [ num ]
<var_dec_tail> -> = <expression>
<var_dec_tail> -> ~

# 选择语句： if ( 表达式 ) 语句 否则语句
<selection_stmt> -> if ( <expression> ) <statement> <else_part>

# 否则语句： else 语句 或 空
<else_part> -> else <statement>
<else_part> -> ~

# 迭代语句： while ( 表达式 ) 语句 或 for ( 表达式 ; 表达式 ; 表达式 ) 语句
<iteration_stmt> -> while ( <expression> ) <statement>
<iteration_stmt> -> for ( <expression> ; <expression> ; <expression> ) <statement>

# 返回语句： return 返回尾
<return_stmt> -> return <return_tail> ;

# 返回尾： 表达式 或 空
<return_tail> -> <expression>
<return_tail> -> ~

# 表达式：或表达式 表达式尾
<expression> -> <or_expression> <expression_tail>

# 表达式尾：若干个 = 或表达式 或 空
<expression_tail> -> = <or_expression> <expression_tail>
<expression_tail> -> ~

# 或表达式：与表达式 或表达式尾
<or_expression> -> <and_expression> <or_expression_tail>

# 或表达式尾：若干个 || 与表达式 或 空
<or_expression_tail> -> || <and_expression> <or_expression_tail>
<or_expression_tail> -> ~

# 与表达式：关系表达式 与表达式尾
<and_expression> -> <relational_expression> <and_expression_tail>

# 与表达式尾：若干个 && 关系表达式 或 空
<and_expression_tail> -> && <relational_expression> <and_expression_tail>
<and_expression_tail> -> ~

# 关系表达式： 算术表达式 关系表达式尾：
<relational_expression> -> <additive_expression> <relational_expression_tail>

# 关系表达式尾： 若干个 关系运算符 算术表达式 或 空
<relational_expression_tail> -> <relop> <additive_expression> <relational_expression_tail>
<relational_expression_tail> -> ~

# 关系运算符： <= 或 < 或 > 或 >= 或 == 或 !=
<relop> -> <=
<relop> -> <
<relop> -> >
<relop> -> >=
<relop> -> ==
<relop> -> !=

# 算术表达式： 项 算术表达式尾
<additive_expression> -> <term> <additive_expression_tail>

# 算术表达式尾： 若干个 加减运算符 项
<additive_expression_tail> -> <addop> <term> <additive_expression_tail>
<additive_expression_tail> -> ~

# 加减运算： + 或 -
<addop> -> +
<addop> -> -

# 项： 因子 项尾
<term> -> <factor> <term_tail>

# 项尾： 若干个 乘除运算 因子
<term_tail> -> <mulop> <factor> <term_tail>
<term_tail> -> ~

# 乘除运算： * 或 / 或 %
<mulop> -> *
<mulop> -> /
<mulop> -> %

# 因子： ( 表达式 ) 或 变量 或 函数调用 或 数组取值 或 变量取址 或 指针取值 或 取否 或 取反 或 常量
<factor> -> ( <expression> )
<factor> -> id <id_tail>
<factor> -> & <factor>
<factor> -> * <factor>
<factor> -> ! <factor>
<factor> -> - <factor>
<factor> -> num

# 标识符尾： ( 传参列表 )   用于函数调用
<id_tail> -> ( <args> )

# 标识符尾： 用于数组取值或赋值
<id_tail> -> [ <expression> ]

# 标识符尾： 空           用于普通变量取值
<id_tail> -> ~

# 传参列表： 表达式 传参尾 或 空
<args> -> <expression> <arg_tail>
<args> -> ~

# 传参尾： 若干个 , 表达式
<arg_tail> -> , <expression> <arg_tail>
<arg_tail> -> ~
